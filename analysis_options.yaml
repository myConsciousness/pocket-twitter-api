# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.freezed.dart"
    - "**/*.g.dart"
  errors:
    invalid_annotation_target: ignore

linter:
  rules:
    - avoid_null_checks_in_equality_operators
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - comment_references
    - constant_identifier_names
    - control_flow_in_finally
    - directives_ordering
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - iterable_contains_unrelated_type
    - library_names
    - library_prefixes
    - list_remove_unrelated_type
    - non_constant_identifier_names
    - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_final_fields
    - prefer_generic_function_type_aliases
    - prefer_typing_uninitialized_variables
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_brace_in_string_interps
    - unrelated_type_equality_checks
    - lines_longer_than_80_chars
    - prefer_relative_imports